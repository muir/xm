// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: ingest.proto

package xopproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// comes from ZZZAttribute
type AttributeType int32

const (
	AttributeType_Unknown  AttributeType = 0
	AttributeType_Bool     AttributeType = 1
	AttributeType_Float64  AttributeType = 2
	AttributeType_Float32  AttributeType = 3
	AttributeType_Int64    AttributeType = 4
	AttributeType_Int32    AttributeType = 5
	AttributeType_Int16    AttributeType = 6
	AttributeType_Int8     AttributeType = 7
	AttributeType_Int      AttributeType = 8
	AttributeType_String   AttributeType = 9
	AttributeType_Link     AttributeType = 10
	AttributeType_Any      AttributeType = 11
	AttributeType_Time     AttributeType = 12
	AttributeType_Duration AttributeType = 13
	AttributeType_Enum     AttributeType = 14
)

// Enum value maps for AttributeType.
var (
	AttributeType_name = map[int32]string{
		0:  "Unknown",
		1:  "Bool",
		2:  "Float64",
		3:  "Float32",
		4:  "Int64",
		5:  "Int32",
		6:  "Int16",
		7:  "Int8",
		8:  "Int",
		9:  "String",
		10: "Link",
		11: "Any",
		12: "Time",
		13: "Duration",
		14: "Enum",
	}
	AttributeType_value = map[string]int32{
		"Unknown":  0,
		"Bool":     1,
		"Float64":  2,
		"Float32":  3,
		"Int64":    4,
		"Int32":    5,
		"Int16":    6,
		"Int8":     7,
		"Int":      8,
		"String":   9,
		"Link":     10,
		"Any":      11,
		"Time":     12,
		"Duration": 13,
		"Enum":     14,
	}
)

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_ingest_proto_enumTypes[0].Descriptor()
}

func (AttributeType) Type() protoreflect.EnumType {
	return &file_ingest_proto_enumTypes[0]
}

func (x AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeType.Descriptor instead.
func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{0}
}

type SourceIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceID        string `protobuf:"bytes,1,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	SourceStartTime int64  `protobuf:"varint,2,opt,name=sourceStartTime,proto3" json:"sourceStartTime,omitempty"`
	SourceRandom    []byte `protobuf:"bytes,3,opt,name=sourceRandom,proto3" json:"sourceRandom,omitempty"`
	CanThrottle     bool   `protobuf:"varint,4,opt,name=canThrottle,proto3" json:"canThrottle,omitempty"` // true for aggregators that have local storage
}

func (x *SourceIdentity) Reset() {
	*x = SourceIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIdentity) ProtoMessage() {}

func (x *SourceIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIdentity.ProtoReflect.Descriptor instead.
func (*SourceIdentity) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{0}
}

func (x *SourceIdentity) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *SourceIdentity) GetSourceStartTime() int64 {
	if x != nil {
		return x.SourceStartTime
	}
	return 0
}

func (x *SourceIdentity) GetSourceRandom() []byte {
	if x != nil {
		return x.SourceRandom
	}
	return nil
}

func (x *SourceIdentity) GetCanThrottle() bool {
	if x != nil {
		return x.CanThrottle
	}
	return false
}

type IngestFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source               *SourceIdentity         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SequenceNumber       uint64                  `protobuf:"fixed64,2,opt,name=sequenceNumber,proto3" json:"sequenceNumber,omitempty"`
	Traces               []*Trace                `protobuf:"bytes,3,rep,name=traces,proto3" json:"traces,omitempty"`
	ReceivedAt           int64                   `protobuf:"varint,4,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
	AttributeDefinitions []*AttributeDefinition  `protobuf:"bytes,5,rep,name=attributeDefinitions,proto3" json:"attributeDefinitions,omitempty"`
	EnumDefinitions      []*EnumDefinition       `protobuf:"bytes,6,rep,name=enumDefinitions,proto3" json:"enumDefinitions,omitempty"`
	AttributesReferenced []*AttributesReferenced `protobuf:"bytes,7,rep,name=attributesReferenced,proto3" json:"attributesReferenced,omitempty"`
}

func (x *IngestFragment) Reset() {
	*x = IngestFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestFragment) ProtoMessage() {}

func (x *IngestFragment) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestFragment.ProtoReflect.Descriptor instead.
func (*IngestFragment) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{1}
}

func (x *IngestFragment) GetSource() *SourceIdentity {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *IngestFragment) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *IngestFragment) GetTraces() []*Trace {
	if x != nil {
		return x.Traces
	}
	return nil
}

func (x *IngestFragment) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *IngestFragment) GetAttributeDefinitions() []*AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

func (x *IngestFragment) GetEnumDefinitions() []*EnumDefinition {
	if x != nil {
		return x.EnumDefinitions
	}
	return nil
}

func (x *IngestFragment) GetAttributesReferenced() []*AttributesReferenced {
	if x != nil {
		return x.AttributesReferenced
	}
	return nil
}

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceID  []byte     `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Requests []*Request `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{2}
}

func (x *Trace) GetTraceID() []byte {
	if x != nil {
		return x.TraceID
	}
	return nil
}

func (x *Trace) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID           []byte  `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	ParentTraceID       []byte  `protobuf:"bytes,2,opt,name=parentTraceID,proto3,oneof" json:"parentTraceID,omitempty"`
	ParentSpanID        []byte  `protobuf:"bytes,3,opt,name=parentSpanID,proto3" json:"parentSpanID,omitempty"`
	PriorLinesInRequest int32   `protobuf:"varint,4,opt,name=priorLinesInRequest,proto3" json:"priorLinesInRequest,omitempty"`
	Spans               []*Span `protobuf:"bytes,5,rep,name=spans,proto3" json:"spans,omitempty"`
	Lines               []*Line `protobuf:"bytes,6,rep,name=lines,proto3" json:"lines,omitempty"` // not included in spans because we want to preserve the exact ordering
	ErrorCount          int32   `protobuf:"varint,7,opt,name=errorCount,proto3" json:"errorCount,omitempty"`
	AlertCount          int32   `protobuf:"varint,8,opt,name=alertCount,proto3" json:"alertCount,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{3}
}

func (x *Request) GetRequestID() []byte {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *Request) GetParentTraceID() []byte {
	if x != nil {
		return x.ParentTraceID
	}
	return nil
}

func (x *Request) GetParentSpanID() []byte {
	if x != nil {
		return x.ParentSpanID
	}
	return nil
}

func (x *Request) GetPriorLinesInRequest() int32 {
	if x != nil {
		return x.PriorLinesInRequest
	}
	return 0
}

func (x *Request) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

func (x *Request) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Request) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *Request) GetAlertCount() int32 {
	if x != nil {
		return x.AlertCount
	}
	return 0
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpanID    []byte `protobuf:"bytes,1,opt,name=spanID,proto3" json:"spanID,omitempty"`
	LogLevel  int32  `protobuf:"varint,2,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	Timestamp int64  `protobuf:"fixed64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	JsonData  []byte `protobuf:"bytes,4,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{4}
}

func (x *Line) GetSpanID() []byte {
	if x != nil {
		return x.SpanID
	}
	return nil
}

func (x *Line) GetLogLevel() int32 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *Line) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Line) GetJsonData() []byte {
	if x != nil {
		return x.JsonData
	}
	return nil
}

type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpanID     []byte `protobuf:"bytes,3,opt,name=SpanID,proto3" json:"SpanID,omitempty"`
	ParentID   []byte `protobuf:"bytes,4,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	JsonData   []byte `protobuf:"bytes,5,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	StartTime  int64  `protobuf:"fixed64,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    *int64 `protobuf:"fixed64,7,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`
	Baggage    []byte `protobuf:"bytes,8,opt,name=baggage,proto3,oneof" json:"baggage,omitempty"`       // only populated if isRequest is true and there is data
	TraceState []byte `protobuf:"bytes,9,opt,name=traceState,proto3,oneof" json:"traceState,omitempty"` // only populated if isRequest is true and there is data
	Version    int32  `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	IsRequest  bool   `protobuf:"varint,11,opt,name=isRequest,proto3" json:"isRequest,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{5}
}

func (x *Span) GetSpanID() []byte {
	if x != nil {
		return x.SpanID
	}
	return nil
}

func (x *Span) GetParentID() []byte {
	if x != nil {
		return x.ParentID
	}
	return nil
}

func (x *Span) GetJsonData() []byte {
	if x != nil {
		return x.JsonData
	}
	return nil
}

func (x *Span) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Span) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Span) GetBaggage() []byte {
	if x != nil {
		return x.Baggage
	}
	return nil
}

func (x *Span) GetTraceState() []byte {
	if x != nil {
		return x.TraceState
	}
	return nil
}

func (x *Span) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Span) GetIsRequest() bool {
	if x != nil {
		return x.IsRequest
	}
	return false
}

type AttributeDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Description     string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Namespace       string        `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceSemver string        `protobuf:"bytes,4,opt,name=namespaceSemver,proto3" json:"namespaceSemver,omitempty"`
	Type            AttributeType `protobuf:"varint,5,opt,name=type,proto3,enum=AttributeType" json:"type,omitempty"`
	ShouldIndex     bool          `protobuf:"varint,6,opt,name=shouldIndex,proto3" json:"shouldIndex,omitempty"`
	Prominence      int32         `protobuf:"varint,7,opt,name=prominence,proto3" json:"prominence,omitempty"`
	Locked          bool          `protobuf:"varint,8,opt,name=locked,proto3" json:"locked,omitempty"`
	Distinct        bool          `protobuf:"varint,9,opt,name=distinct,proto3" json:"distinct,omitempty"`
	Multiple        bool          `protobuf:"varint,10,opt,name=multiple,proto3" json:"multiple,omitempty"`
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{6}
}

func (x *AttributeDefinition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AttributeDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttributeDefinition) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AttributeDefinition) GetNamespaceSemver() string {
	if x != nil {
		return x.NamespaceSemver
	}
	return ""
}

func (x *AttributeDefinition) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_Unknown
}

func (x *AttributeDefinition) GetShouldIndex() bool {
	if x != nil {
		return x.ShouldIndex
	}
	return false
}

func (x *AttributeDefinition) GetProminence() int32 {
	if x != nil {
		return x.Prominence
	}
	return 0
}

func (x *AttributeDefinition) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *AttributeDefinition) GetDistinct() bool {
	if x != nil {
		return x.Distinct
	}
	return false
}

func (x *AttributeDefinition) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

type EnumDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey    string `protobuf:"bytes,1,opt,name=attributeKey,proto3" json:"attributeKey,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceSemver string `protobuf:"bytes,3,opt,name=namespaceSemver,proto3" json:"namespaceSemver,omitempty"`
	String_         string `protobuf:"bytes,4,opt,name=string,proto3" json:"string,omitempty"`
	IntValue        int64  `protobuf:"varint,5,opt,name=intValue,proto3" json:"intValue,omitempty"`
}

func (x *EnumDefinition) Reset() {
	*x = EnumDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumDefinition) ProtoMessage() {}

func (x *EnumDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumDefinition.ProtoReflect.Descriptor instead.
func (*EnumDefinition) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{7}
}

func (x *EnumDefinition) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *EnumDefinition) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EnumDefinition) GetNamespaceSemver() string {
	if x != nil {
		return x.NamespaceSemver
	}
	return ""
}

func (x *EnumDefinition) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *EnumDefinition) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

type AttributesReferenced struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceID         []byte `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	AttributeKey    string `protobuf:"bytes,2,opt,name=attributeKey,proto3" json:"attributeKey,omitempty"`
	Namespace       string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceSemver string `protobuf:"bytes,4,opt,name=namespaceSemver,proto3" json:"namespaceSemver,omitempty"`
}

func (x *AttributesReferenced) Reset() {
	*x = AttributesReferenced{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesReferenced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesReferenced) ProtoMessage() {}

func (x *AttributesReferenced) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesReferenced.ProtoReflect.Descriptor instead.
func (*AttributesReferenced) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{8}
}

func (x *AttributesReferenced) GetTraceID() []byte {
	if x != nil {
		return x.TraceID
	}
	return nil
}

func (x *AttributesReferenced) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *AttributesReferenced) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AttributesReferenced) GetNamespaceSemver() string {
	if x != nil {
		return x.NamespaceSemver
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{9}
}

func (x *Error) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ReadyToStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID uint64 `protobuf:"fixed64,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *ReadyToStream) Reset() {
	*x = ReadyToStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToStream) ProtoMessage() {}

func (x *ReadyToStream) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToStream.ProtoReflect.Descriptor instead.
func (*ReadyToStream) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{10}
}

func (x *ReadyToStream) GetStreamID() uint64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ingest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ingest_proto_rawDescGZIP(), []int{11}
}

var File_ingest_proto protoreflect.FileDescriptor

var file_ingest_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c,
	0x01, 0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x63, 0x61, 0x6e, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x22, 0xf1, 0x02,
	0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x48, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x65,
	0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x65, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x52, 0x14, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x64, 0x22, 0x47, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61,
	0x6e, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65,
	0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x05, 0x73, 0x70, 0x61,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x44, 0x22, 0x74, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x61,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x10,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x02, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x10, 0x48,
	0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01,
	0x52, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x02, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xc7, 0x02, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x6d, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x45,
	0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c, 0x01,
	0x0a, 0x14, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x2b, 0x0a, 0x0d, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a,
	0xb5, 0x01, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x36, 0x34, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x31,
	0x36, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x74, 0x38, 0x10, 0x07, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x6e, 0x74, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x6e, 0x79, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x0c, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0d, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x6e, 0x75, 0x6d, 0x10, 0x0e, 0x32, 0x4f, 0x0a, 0x06, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x06,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6f, 0x70, 0x6c, 0x6f, 0x67, 0x2f, 0x78, 0x6f,
	0x70, 0x2d, 0x67, 0x6f, 0x2f, 0x78, 0x6f, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ingest_proto_rawDescOnce sync.Once
	file_ingest_proto_rawDescData = file_ingest_proto_rawDesc
)

func file_ingest_proto_rawDescGZIP() []byte {
	file_ingest_proto_rawDescOnce.Do(func() {
		file_ingest_proto_rawDescData = protoimpl.X.CompressGZIP(file_ingest_proto_rawDescData)
	})
	return file_ingest_proto_rawDescData
}

var file_ingest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ingest_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ingest_proto_goTypes = []interface{}{
	(AttributeType)(0),           // 0: AttributeType
	(*SourceIdentity)(nil),       // 1: SourceIdentity
	(*IngestFragment)(nil),       // 2: IngestFragment
	(*Trace)(nil),                // 3: Trace
	(*Request)(nil),              // 4: Request
	(*Line)(nil),                 // 5: Line
	(*Span)(nil),                 // 6: Span
	(*AttributeDefinition)(nil),  // 7: AttributeDefinition
	(*EnumDefinition)(nil),       // 8: EnumDefinition
	(*AttributesReferenced)(nil), // 9: AttributesReferenced
	(*Error)(nil),                // 10: Error
	(*ReadyToStream)(nil),        // 11: ReadyToStream
	(*Empty)(nil),                // 12: Empty
}
var file_ingest_proto_depIdxs = []int32{
	1,  // 0: IngestFragment.source:type_name -> SourceIdentity
	3,  // 1: IngestFragment.traces:type_name -> Trace
	7,  // 2: IngestFragment.attributeDefinitions:type_name -> AttributeDefinition
	8,  // 3: IngestFragment.enumDefinitions:type_name -> EnumDefinition
	9,  // 4: IngestFragment.attributesReferenced:type_name -> AttributesReferenced
	4,  // 5: Trace.requests:type_name -> Request
	6,  // 6: Request.spans:type_name -> Span
	5,  // 7: Request.lines:type_name -> Line
	0,  // 8: AttributeDefinition.type:type_name -> AttributeType
	12, // 9: Ingest.Ping:input_type -> Empty
	2,  // 10: Ingest.UploadFragment:input_type -> IngestFragment
	12, // 11: Ingest.Ping:output_type -> Empty
	10, // 12: Ingest.UploadFragment:output_type -> Error
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ingest_proto_init() }
func file_ingest_proto_init() {
	if File_ingest_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ingest_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesReferenced); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ingest_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ingest_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_ingest_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ingest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ingest_proto_goTypes,
		DependencyIndexes: file_ingest_proto_depIdxs,
		EnumInfos:         file_ingest_proto_enumTypes,
		MessageInfos:      file_ingest_proto_msgTypes,
	}.Build()
	File_ingest_proto = out.File
	file_ingest_proto_rawDesc = nil
	file_ingest_proto_goTypes = nil
	file_ingest_proto_depIdxs = nil
}
