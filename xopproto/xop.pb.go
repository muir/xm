// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: xop.proto

package xopproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LineKind int32

const (
	LineKind_KindLine  LineKind = 0
	LineKind_KindModel LineKind = 1
	LineKind_KindLink  LineKind = 2
)

// Enum value maps for LineKind.
var (
	LineKind_name = map[int32]string{
		0: "KindLine",
		1: "KindModel",
		2: "KindLink",
	}
	LineKind_value = map[string]int32{
		"KindLine":  0,
		"KindModel": 1,
		"KindLink":  2,
	}
)

func (x LineKind) Enum() *LineKind {
	p := new(LineKind)
	*p = x
	return p
}

func (x LineKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LineKind) Descriptor() protoreflect.EnumDescriptor {
	return file_xop_proto_enumTypes[0].Descriptor()
}

func (LineKind) Type() protoreflect.EnumType {
	return &file_xop_proto_enumTypes[0]
}

func (x LineKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LineKind.Descriptor instead.
func (LineKind) EnumDescriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{0}
}

// comes from ZZZAttribute
type AttributeType int32

const (
	AttributeType_Unknown  AttributeType = 0
	AttributeType_Bool     AttributeType = 1 // value is in intValue, 0 = false, 1 = true
	AttributeType_Float64  AttributeType = 2
	AttributeType_Float32  AttributeType = 3
	AttributeType_Int64    AttributeType = 4
	AttributeType_Int32    AttributeType = 5
	AttributeType_Int16    AttributeType = 6
	AttributeType_Int8     AttributeType = 7
	AttributeType_Int      AttributeType = 8
	AttributeType_String   AttributeType = 9
	AttributeType_Link     AttributeType = 10 // value is in stringValue
	AttributeType_Any      AttributeType = 11 // value is in bytesValue, JSON encoded, type is in stringValue
	AttributeType_Time     AttributeType = 12 // value is in intValue, UnixNano.
	AttributeType_Duration AttributeType = 13 // value is in intValue, nanoseconds
	AttributeType_Enum     AttributeType = 14 // int is in intValue, string is in stringValue
	// These are not included in ZZZAttribute, but are included in line attributes (AllData)
	AttributeType_Uint64   AttributeType = 100
	AttributeType_Uint32   AttributeType = 101
	AttributeType_Uint16   AttributeType = 102
	AttributeType_Uint8    AttributeType = 103
	AttributeType_Uint     AttributeType = 104
	AttributeType_Uintptr  AttributeType = 105
	AttributeType_Stringer AttributeType = 106 // value is in stringValue
)

// Enum value maps for AttributeType.
var (
	AttributeType_name = map[int32]string{
		0:   "Unknown",
		1:   "Bool",
		2:   "Float64",
		3:   "Float32",
		4:   "Int64",
		5:   "Int32",
		6:   "Int16",
		7:   "Int8",
		8:   "Int",
		9:   "String",
		10:  "Link",
		11:  "Any",
		12:  "Time",
		13:  "Duration",
		14:  "Enum",
		100: "Uint64",
		101: "Uint32",
		102: "Uint16",
		103: "Uint8",
		104: "Uint",
		105: "Uintptr",
		106: "Stringer",
	}
	AttributeType_value = map[string]int32{
		"Unknown":  0,
		"Bool":     1,
		"Float64":  2,
		"Float32":  3,
		"Int64":    4,
		"Int32":    5,
		"Int16":    6,
		"Int8":     7,
		"Int":      8,
		"String":   9,
		"Link":     10,
		"Any":      11,
		"Time":     12,
		"Duration": 13,
		"Enum":     14,
		"Uint64":   100,
		"Uint32":   101,
		"Uint16":   102,
		"Uint8":    103,
		"Uint":     104,
		"Uintptr":  105,
		"Stringer": 106,
	}
)

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_xop_proto_enumTypes[1].Descriptor()
}

func (AttributeType) Type() protoreflect.EnumType {
	return &file_xop_proto_enumTypes[1]
}

func (x AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeType.Descriptor instead.
func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{1}
}

type Encoding int32

const (
	Encoding_UnknownEncoding Encoding = 0
	Encoding_JSONInProto     Encoding = 1
	Encoding_Proto           Encoding = 2
)

// Enum value maps for Encoding.
var (
	Encoding_name = map[int32]string{
		0: "UnknownEncoding",
		1: "JSONInProto",
		2: "Proto",
	}
	Encoding_value = map[string]int32{
		"UnknownEncoding": 0,
		"JSONInProto":     1,
		"Proto":           2,
	}
)

func (x Encoding) Enum() *Encoding {
	p := new(Encoding)
	*p = x
	return p
}

func (x Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_xop_proto_enumTypes[2].Descriptor()
}

func (Encoding) Type() protoreflect.EnumType {
	return &file_xop_proto_enumTypes[2]
}

func (x Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Encoding.Descriptor instead.
func (Encoding) EnumDescriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{2}
}

type Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderStartTime int64  `protobuf:"varint,5,opt,name=senderStartTime,proto3" json:"senderStartTime,omitempty"`
	SenderRandom    []byte `protobuf:"bytes,6,opt,name=senderRandom,proto3" json:"senderRandom,omitempty"`
	CanThrottle     bool   `protobuf:"varint,7,opt,name=canThrottle,proto3" json:"canThrottle,omitempty"` // true for aggregators that have local storage
	ProtoVersion    int32  `protobuf:"varint,8,opt,name=protoVersion,proto3" json:"protoVersion,omitempty"`
}

func (x *Sender) Reset() {
	*x = Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sender) ProtoMessage() {}

func (x *Sender) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sender.ProtoReflect.Descriptor instead.
func (*Sender) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{0}
}

func (x *Sender) GetSenderStartTime() int64 {
	if x != nil {
		return x.SenderStartTime
	}
	return 0
}

func (x *Sender) GetSenderRandom() []byte {
	if x != nil {
		return x.SenderRandom
	}
	return nil
}

func (x *Sender) GetCanThrottle() bool {
	if x != nil {
		return x.CanThrottle
	}
	return false
}

func (x *Sender) GetProtoVersion() int32 {
	if x != nil {
		return x.ProtoVersion
	}
	return 0
}

type IngestFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Sender  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Encoding        Encoding `protobuf:"varint,2,opt,name=encoding,proto3,enum=xop.Encoding" json:"encoding,omitempty"`
	EndodingVersion uint32   `protobuf:"varint,3,opt,name=endodingVersion,proto3" json:"endodingVersion,omitempty"`
	SequenceNumber  uint32   `protobuf:"varint,4,opt,name=sequenceNumber,proto3" json:"sequenceNumber,omitempty"`
	Traces          []*Trace `protobuf:"bytes,5,rep,name=traces,proto3" json:"traces,omitempty"`
	ReceivedAt      int64    `protobuf:"varint,6,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"` // XXX repeated EnumDefinition enumDefinitions = 8;
}

func (x *IngestFragment) Reset() {
	*x = IngestFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestFragment) ProtoMessage() {}

func (x *IngestFragment) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestFragment.ProtoReflect.Descriptor instead.
func (*IngestFragment) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{1}
}

func (x *IngestFragment) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *IngestFragment) GetEncoding() Encoding {
	if x != nil {
		return x.Encoding
	}
	return Encoding_UnknownEncoding
}

func (x *IngestFragment) GetEndodingVersion() uint32 {
	if x != nil {
		return x.EndodingVersion
	}
	return 0
}

func (x *IngestFragment) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *IngestFragment) GetTraces() []*Trace {
	if x != nil {
		return x.Traces
	}
	return nil
}

func (x *IngestFragment) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceID  []byte     `protobuf:"bytes,1,opt,name=TraceID,proto3" json:"TraceID,omitempty"`
	Requests []*Request `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *Trace) Reset() {
	*x = Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{2}
}

func (x *Trace) GetTraceID() []byte {
	if x != nil {
		return x.TraceID
	}
	return nil
}

func (x *Trace) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID              []byte                 `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	ParentTraceID          []byte                 `protobuf:"bytes,2,opt,name=parentTraceID,proto3,oneof" json:"parentTraceID,omitempty"`
	PriorLinesInRequest    int32                  `protobuf:"varint,3,opt,name=priorLinesInRequest,proto3" json:"priorLinesInRequest,omitempty"`
	Spans                  []*Span                `protobuf:"bytes,4,rep,name=spans,proto3" json:"spans,omitempty"` // first span is always the request span
	Lines                  []*Line                `protobuf:"bytes,5,rep,name=lines,proto3" json:"lines,omitempty"` // not included in spans because we want to preserve the exact ordering
	ErrorCount             int32                  `protobuf:"varint,6,opt,name=errorCount,proto3" json:"errorCount,omitempty"`
	AlertCount             int32                  `protobuf:"varint,7,opt,name=alertCount,proto3" json:"alertCount,omitempty"`
	SourceNamespace        string                 `protobuf:"bytes,8,opt,name=sourceNamespace,proto3" json:"sourceNamespace,omitempty"`
	SourceNamespaceVersion string                 `protobuf:"bytes,9,opt,name=sourceNamespaceVersion,proto3" json:"sourceNamespaceVersion,omitempty"`
	SourceID               string                 `protobuf:"bytes,10,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	SourceVersion          string                 `protobuf:"bytes,11,opt,name=sourceVersion,proto3" json:"sourceVersion,omitempty"`
	AttributeDefinitions   []*AttributeDefinition `protobuf:"bytes,12,rep,name=attributeDefinitions,proto3" json:"attributeDefinitions,omitempty"` // always includes full set, even if request is sent multiple times
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{3}
}

func (x *Request) GetRequestID() []byte {
	if x != nil {
		return x.RequestID
	}
	return nil
}

func (x *Request) GetParentTraceID() []byte {
	if x != nil {
		return x.ParentTraceID
	}
	return nil
}

func (x *Request) GetPriorLinesInRequest() int32 {
	if x != nil {
		return x.PriorLinesInRequest
	}
	return 0
}

func (x *Request) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

func (x *Request) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Request) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *Request) GetAlertCount() int32 {
	if x != nil {
		return x.AlertCount
	}
	return 0
}

func (x *Request) GetSourceNamespace() string {
	if x != nil {
		return x.SourceNamespace
	}
	return ""
}

func (x *Request) GetSourceNamespaceVersion() string {
	if x != nil {
		return x.SourceNamespaceVersion
	}
	return ""
}

func (x *Request) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *Request) GetSourceVersion() string {
	if x != nil {
		return x.SourceVersion
	}
	return ""
}

func (x *Request) GetAttributeDefinitions() []*AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

type Span struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpanID       []byte           `protobuf:"bytes,3,opt,name=spanID,proto3" json:"spanID,omitempty"`
	ParentID     []byte           `protobuf:"bytes,4,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Attributes   []*SpanAttribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
	StartTime    int64            `protobuf:"fixed64,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      *int64           `protobuf:"fixed64,7,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`
	Baggage      string           `protobuf:"bytes,8,opt,name=baggage,proto3" json:"baggage,omitempty"`       // only populated if isRequest is true and there is data
	TraceState   string           `protobuf:"bytes,9,opt,name=traceState,proto3" json:"traceState,omitempty"` // only populated if isRequest is true and there is data
	Version      int32            `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	IsRequest    bool             `protobuf:"varint,11,opt,name=isRequest,proto3" json:"isRequest,omitempty"` // somewhat redundant
	Name         string           `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	SequenceCode string           `protobuf:"bytes,13,opt,name=sequenceCode,proto3" json:"sequenceCode,omitempty"`
}

func (x *Span) Reset() {
	*x = Span{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{4}
}

func (x *Span) GetSpanID() []byte {
	if x != nil {
		return x.SpanID
	}
	return nil
}

func (x *Span) GetParentID() []byte {
	if x != nil {
		return x.ParentID
	}
	return nil
}

func (x *Span) GetAttributes() []*SpanAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Span) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Span) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Span) GetBaggage() string {
	if x != nil {
		return x.Baggage
	}
	return ""
}

func (x *Span) GetTraceState() string {
	if x != nil {
		return x.TraceState
	}
	return ""
}

func (x *Span) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Span) GetIsRequest() bool {
	if x != nil {
		return x.IsRequest
	}
	return false
}

func (x *Span) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Span) GetSequenceCode() string {
	if x != nil {
		return x.SequenceCode
	}
	return ""
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpanID          []byte       `protobuf:"bytes,1,opt,name=spanID,proto3" json:"spanID,omitempty"`
	LogLevel        int32        `protobuf:"varint,2,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	Timestamp       int64        `protobuf:"fixed64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attributes      []*Attribute `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty"`
	MessageFormat   *string      `protobuf:"bytes,5,opt,name=messageFormat,proto3,oneof" json:"messageFormat,omitempty"`
	Message         string       `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	MessageTemplate string       `protobuf:"bytes,7,opt,name=messageTemplate,proto3" json:"messageTemplate,omitempty"`
	LineKind        LineKind     `protobuf:"varint,8,opt,name=lineKind,proto3,enum=xop.LineKind" json:"lineKind,omitempty"`
	Link            string       `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"` // custom type?
	Model           *Model       `protobuf:"bytes,10,opt,name=model,proto3,oneof" json:"model,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{5}
}

func (x *Line) GetSpanID() []byte {
	if x != nil {
		return x.SpanID
	}
	return nil
}

func (x *Line) GetLogLevel() int32 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *Line) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Line) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Line) GetMessageFormat() string {
	if x != nil && x.MessageFormat != nil {
		return *x.MessageFormat
	}
	return ""
}

func (x *Line) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Line) GetMessageTemplate() string {
	if x != nil {
		return x.MessageTemplate
	}
	return ""
}

func (x *Line) GetLineKind() LineKind {
	if x != nil {
		return x.LineKind
	}
	return LineKind_KindLine
}

func (x *Line) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Line) GetModel() *Model {
	if x != nil {
		return x.Model
	}
	return nil
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Json  []byte `protobuf:"bytes,2,opt,name=json,proto3" json:"json,omitempty"`
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{6}
}

func (x *Model) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Model) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *Model) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SpanAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeDefinitionSequenceNumber uint32            `protobuf:"varint,1,opt,name=attributeDefinitionSequenceNumber,proto3" json:"attributeDefinitionSequenceNumber,omitempty"`
	Values                            []*AttributeValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"` // at least one is required
}

func (x *SpanAttribute) Reset() {
	*x = SpanAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpanAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanAttribute) ProtoMessage() {}

func (x *SpanAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanAttribute.ProtoReflect.Descriptor instead.
func (*SpanAttribute) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{7}
}

func (x *SpanAttribute) GetAttributeDefinitionSequenceNumber() uint32 {
	if x != nil {
		return x.AttributeDefinitionSequenceNumber
	}
	return 0
}

func (x *SpanAttribute) GetValues() []*AttributeValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type  AttributeType   `protobuf:"varint,2,opt,name=type,proto3,enum=xop.AttributeType" json:"type,omitempty"`
	Value *AttributeValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{8}
}

func (x *Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attribute) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_Unknown
}

func (x *Attribute) GetValue() *AttributeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type AttributeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringValue string  `protobuf:"bytes,2,opt,name=stringValue,proto3" json:"stringValue,omitempty"`
	IntValue    int64   `protobuf:"zigzag64,3,opt,name=intValue,proto3" json:"intValue,omitempty"`
	UintValue   uint64  `protobuf:"varint,4,opt,name=uintValue,proto3" json:"uintValue,omitempty"`
	FloatValue  float64 `protobuf:"fixed64,5,opt,name=floatValue,proto3" json:"floatValue,omitempty"`
	BytesValue  []byte  `protobuf:"bytes,6,opt,name=bytesValue,proto3" json:"bytesValue,omitempty"`
}

func (x *AttributeValue) Reset() {
	*x = AttributeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue) ProtoMessage() {}

func (x *AttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue.ProtoReflect.Descriptor instead.
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{9}
}

func (x *AttributeValue) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *AttributeValue) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

func (x *AttributeValue) GetUintValue() uint64 {
	if x != nil {
		return x.UintValue
	}
	return 0
}

func (x *AttributeValue) GetFloatValue() float64 {
	if x != nil {
		return x.FloatValue
	}
	return 0
}

func (x *AttributeValue) GetBytesValue() []byte {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

type AttributeDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Description     string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Namespace       string        `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceSemver string        `protobuf:"bytes,4,opt,name=namespaceSemver,proto3" json:"namespaceSemver,omitempty"`
	Type            AttributeType `protobuf:"varint,5,opt,name=type,proto3,enum=xop.AttributeType" json:"type,omitempty"`
	ShouldIndex     bool          `protobuf:"varint,6,opt,name=shouldIndex,proto3" json:"shouldIndex,omitempty"`
	Prominence      int32         `protobuf:"varint,7,opt,name=prominence,proto3" json:"prominence,omitempty"`
	Locked          bool          `protobuf:"varint,8,opt,name=locked,proto3" json:"locked,omitempty"`
	Distinct        bool          `protobuf:"varint,9,opt,name=distinct,proto3" json:"distinct,omitempty"`
	Multiple        bool          `protobuf:"varint,10,opt,name=multiple,proto3" json:"multiple,omitempty"`
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{10}
}

func (x *AttributeDefinition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AttributeDefinition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AttributeDefinition) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AttributeDefinition) GetNamespaceSemver() string {
	if x != nil {
		return x.NamespaceSemver
	}
	return ""
}

func (x *AttributeDefinition) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_Unknown
}

func (x *AttributeDefinition) GetShouldIndex() bool {
	if x != nil {
		return x.ShouldIndex
	}
	return false
}

func (x *AttributeDefinition) GetProminence() int32 {
	if x != nil {
		return x.Prominence
	}
	return 0
}

func (x *AttributeDefinition) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *AttributeDefinition) GetDistinct() bool {
	if x != nil {
		return x.Distinct
	}
	return false
}

func (x *AttributeDefinition) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

type EnumDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeKey    string `protobuf:"bytes,1,opt,name=attributeKey,proto3" json:"attributeKey,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceSemver string `protobuf:"bytes,3,opt,name=namespaceSemver,proto3" json:"namespaceSemver,omitempty"`
	String_         string `protobuf:"bytes,4,opt,name=string,proto3" json:"string,omitempty"`
	IntValue        int64  `protobuf:"varint,5,opt,name=intValue,proto3" json:"intValue,omitempty"`
}

func (x *EnumDefinition) Reset() {
	*x = EnumDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumDefinition) ProtoMessage() {}

func (x *EnumDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumDefinition.ProtoReflect.Descriptor instead.
func (*EnumDefinition) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{11}
}

func (x *EnumDefinition) GetAttributeKey() string {
	if x != nil {
		return x.AttributeKey
	}
	return ""
}

func (x *EnumDefinition) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EnumDefinition) GetNamespaceSemver() string {
	if x != nil {
		return x.NamespaceSemver
	}
	return ""
}

func (x *EnumDefinition) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *EnumDefinition) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{12}
}

func (x *Error) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ReadyToStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID uint64 `protobuf:"fixed64,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *ReadyToStream) Reset() {
	*x = ReadyToStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyToStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyToStream) ProtoMessage() {}

func (x *ReadyToStream) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyToStream.ProtoReflect.Descriptor instead.
func (*ReadyToStream) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{13}
}

func (x *ReadyToStream) GetStreamID() uint64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_xop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_xop_proto_rawDescGZIP(), []int{14}
}

var File_xop_proto protoreflect.FileDescriptor

var file_xop_proto_rawDesc = []byte{
	0x0a, 0x09, 0x78, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x78, 0x6f, 0x70,
	0x22, 0x9c, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e,
	0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x63, 0x61, 0x6e, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xf6, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x78, 0x6f, 0x70, 0x2e,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x65, 0x6e, 0x64,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x78, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x8a, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x29, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x4c, 0x69,
	0x6e, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05,
	0x73, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x78, 0x6f,
	0x70, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x78,
	0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x44, 0x22, 0xe1, 0x02, 0x0a, 0x04, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x70, 0x61,
	0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x32, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x10, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf9, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x10, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x29, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x29, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x25, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x01, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0x45, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x53, 0x70,
	0x61, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x21, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x78, 0x6f, 0x70, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x78,
	0x6f, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcb, 0x02, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x6d, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x78, 0x6f, 0x70, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x69,
	0x6e, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x6d, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1b, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x2b, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x35, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x69, 0x6e, 0x64, 0x4c,
	0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x6b,
	0x10, 0x02, 0x2a, 0x89, 0x02, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x33, 0x32, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x6e, 0x74, 0x31, 0x36, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x74, 0x38, 0x10, 0x07,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x0a, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0d,
	0x12, 0x08, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x10, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x10, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x10, 0x66, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x69, 0x6e, 0x74, 0x38, 0x10, 0x67, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x69, 0x6e,
	0x74, 0x10, 0x68, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x69, 0x6e, 0x74, 0x70, 0x74, 0x72, 0x10, 0x69,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x10, 0x6a, 0x2a, 0x3b,
	0x0a, 0x08, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x4a, 0x53, 0x4f, 0x4e, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x10, 0x02, 0x32, 0x5f, 0x0a, 0x06, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x0a, 0x2e,
	0x78, 0x6f, 0x70, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e, 0x78, 0x6f, 0x70, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x78, 0x6f, 0x70, 0x2e,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0a,
	0x2e, 0x78, 0x6f, 0x70, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6f, 0x70, 0x6c, 0x6f,
	0x67, 0x2f, 0x78, 0x6f, 0x70, 0x2d, 0x67, 0x6f, 0x2f, 0x78, 0x6f, 0x70, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xop_proto_rawDescOnce sync.Once
	file_xop_proto_rawDescData = file_xop_proto_rawDesc
)

func file_xop_proto_rawDescGZIP() []byte {
	file_xop_proto_rawDescOnce.Do(func() {
		file_xop_proto_rawDescData = protoimpl.X.CompressGZIP(file_xop_proto_rawDescData)
	})
	return file_xop_proto_rawDescData
}

var file_xop_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_xop_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_xop_proto_goTypes = []interface{}{
	(LineKind)(0),               // 0: xop.LineKind
	(AttributeType)(0),          // 1: xop.AttributeType
	(Encoding)(0),               // 2: xop.Encoding
	(*Sender)(nil),              // 3: xop.Sender
	(*IngestFragment)(nil),      // 4: xop.IngestFragment
	(*Trace)(nil),               // 5: xop.Trace
	(*Request)(nil),             // 6: xop.Request
	(*Span)(nil),                // 7: xop.Span
	(*Line)(nil),                // 8: xop.Line
	(*Model)(nil),               // 9: xop.Model
	(*SpanAttribute)(nil),       // 10: xop.SpanAttribute
	(*Attribute)(nil),           // 11: xop.Attribute
	(*AttributeValue)(nil),      // 12: xop.AttributeValue
	(*AttributeDefinition)(nil), // 13: xop.AttributeDefinition
	(*EnumDefinition)(nil),      // 14: xop.EnumDefinition
	(*Error)(nil),               // 15: xop.Error
	(*ReadyToStream)(nil),       // 16: xop.ReadyToStream
	(*Empty)(nil),               // 17: xop.Empty
}
var file_xop_proto_depIdxs = []int32{
	3,  // 0: xop.IngestFragment.sender:type_name -> xop.Sender
	2,  // 1: xop.IngestFragment.encoding:type_name -> xop.Encoding
	5,  // 2: xop.IngestFragment.traces:type_name -> xop.Trace
	6,  // 3: xop.Trace.requests:type_name -> xop.Request
	7,  // 4: xop.Request.spans:type_name -> xop.Span
	8,  // 5: xop.Request.lines:type_name -> xop.Line
	13, // 6: xop.Request.attributeDefinitions:type_name -> xop.AttributeDefinition
	10, // 7: xop.Span.attributes:type_name -> xop.SpanAttribute
	11, // 8: xop.Line.attributes:type_name -> xop.Attribute
	0,  // 9: xop.Line.lineKind:type_name -> xop.LineKind
	9,  // 10: xop.Line.model:type_name -> xop.Model
	12, // 11: xop.SpanAttribute.values:type_name -> xop.AttributeValue
	1,  // 12: xop.Attribute.type:type_name -> xop.AttributeType
	12, // 13: xop.Attribute.value:type_name -> xop.AttributeValue
	1,  // 14: xop.AttributeDefinition.type:type_name -> xop.AttributeType
	17, // 15: xop.Ingest.Ping:input_type -> xop.Empty
	4,  // 16: xop.Ingest.UploadFragment:input_type -> xop.IngestFragment
	17, // 17: xop.Ingest.Ping:output_type -> xop.Empty
	15, // 18: xop.Ingest.UploadFragment:output_type -> xop.Error
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_xop_proto_init() }
func file_xop_proto_init() {
	if File_xop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Span); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpanAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyToStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_xop_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_xop_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_xop_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xop_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xop_proto_goTypes,
		DependencyIndexes: file_xop_proto_depIdxs,
		EnumInfos:         file_xop_proto_enumTypes,
		MessageInfos:      file_xop_proto_msgTypes,
	}.Build()
	File_xop_proto = out.File
	file_xop_proto_rawDesc = nil
	file_xop_proto_goTypes = nil
	file_xop_proto_depIdxs = nil
}
