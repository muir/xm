
For enums from OTEL, generate them from the protobuf constants.

Use ZSON for main transport?  https://www.brimdata.io/blog/unmarshal-interface/
Use BSON for main transport?

Hmmm, if entire trace is a bytes string, it can be treated as  StrAttribute...

Use generics to make type-safe Enum span attributes: can't do it as a method on Span, but can
do it as a function. 

Get rid of xop.Thing entirely?

Rename "xoplog" -> "xop"

Figure out a way to enforce limited vocabulary on select Attributes and Data elements

Line attributes

Add tests:
	Span attributes
	Structued lines
	All todos

Base loggers:
	Console to io.Writer
	JSON to io.Writer

Round out the kinds of things that can be logged:
	Tables
	Pre-encoded data

Allow base loggers to resources (span attribute tracking, JSON formatting)

Pull in speed hacks from phuslog

Metrics
	
	Re-use attribute naming?

	Allow "tags" or some other multi-dimensional naming

Events

	Gets counted

	Re-use attributes?

	Attach arbitrary data

Can chaining be done with generics?

	type bot interface{
		Int(string, int64)
		Bool(string, bool)
		New() bot
	}

	type top interface{

	type Builder[T:any, B:bot] struct {
		T
	}
	func (b Builder[T]) Int8(k string, v int8) Builder[T] 
