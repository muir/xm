package xoptestutil

import (
	"github.com/muir/xop-go/xopat"
	"github.com/muir/xop-go/xopconst"
)

type AnyObject struct {
	I int
	S string
	A []string
	P *AnyObject
}

var ExampleMetadataSingleAny = xopat.Make{Key: "s-any", Namespace: "test"}.AnyAttribute(AnyObject{})
var ExampleMetadataLockedAny = xopat.Make{Key: "l-any", Locked: true, Namespace: "test"}.AnyAttribute(AnyObject{})
var ExampleMetadataMultipleAny = xopat.Make{Key: "m-any", Multiple: true, Namespace: "test"}.AnyAttribute(AnyObject{})
var ExampleMetadataDistinctAny = xopat.Make{Key: "d-any", Multiple: true, Distinct: true, Namespace: "test"}.AnyAttribute(AnyObject{})

var ExampleMetadataSingleEnum = xopat.Make{Key: "s-ienum", Namespace: "test"}.IotaEnumAttribute()
var ExampleMetadataLockedEnum = xopat.Make{Key: "l-ienum", Locked: true, Namespace: "test"}.IotaEnumAttribute()
var ExampleMetadataMultipleEnum = xopat.Make{Key: "m-ienum", Multiple: true, Namespace: "test"}.IotaEnumAttribute()
var ExampleMetadataDistinctEnum = xopat.Make{Key: "d-ienum", Multiple: true, Distinct: true, Namespace: "test"}.IotaEnumAttribute()

var (
	SingleEnumOne   = ExampleMetadataSingleEnum.Iota("one")
	SingleEnumTwo   = ExampleMetadataSingleEnum.Iota("two")
	SingleEnumThree = ExampleMetadataSingleEnum.Iota("Three")

	LockedEnumOne   = ExampleMetadataLockedEnum.Iota("one")
	LockedEnumTwo   = ExampleMetadataLockedEnum.Iota("two")
	LockedEnumThree = ExampleMetadataLockedEnum.Iota("Three")

	MultipleEnumOne   = ExampleMetadataMultipleEnum.Iota("one")
	MultipleEnumTwo   = ExampleMetadataMultipleEnum.Iota("two")
	MultipleEnumThree = ExampleMetadataMultipleEnum.Iota("Three")

	DistinctEnumOne   = ExampleMetadataDistinctEnum.Iota("one")
	DistinctEnumTwo   = ExampleMetadataDistinctEnum.Iota("two")
	DistinctEnumThree = ExampleMetadataDistinctEnum.Iota("Three")
)

var ExampleMetadataSingleEEnum = xopat.Make{Key: "s-eenum", Namespace: "test"}.EmbeddedEnumAttribute(threeType(1))
var ExampleMetadataLockedEEnum = xopat.Make{Key: "l-eenum", Locked: true, Namespace: "test"}.EmbeddedEnumAttribute(1)
var ExampleMetadataMultipleEEnum = xopat.Make{Key: "m-eenum", Multiple: true, Namespace: "test"}.EmbeddedEnumAttribute(int64(1))
var ExampleMetadataDistinctEEnum = xopat.Make{Key: "d-eenum", Multiple: true, Distinct: true, Namespace: "test"}.EmbeddedEnumAttribute(threeType(1))

type threeType int

func (t threeType) String() string {
	switch t {
	case 1:
		return "one"
	case 2:
		return "two"
	case 3:
		return "three"
	default:
		return "other"
	}
}

var (
	SingleEEnumOne   = ExampleMetadataSingleEEnum.AddStringer(threeType(1))
	SingleEEnumTwo   = ExampleMetadataSingleEEnum.AddStringer(threeType(2))
	SingleEEnumThree = ExampleMetadataSingleEEnum.AddStringer(threeType(3))

	LockedEEnumOne   = ExampleMetadataLockedEEnum.Add(1, "one")
	LockedEEnumTwo   = ExampleMetadataLockedEEnum.Add(2, "two")
	LockedEEnumThree = ExampleMetadataLockedEEnum.Add(3, "three")

	MultipleEEnumOne   = ExampleMetadataMultipleEEnum.Add64(int64(1), "one")
	MultipleEEnumTwo   = ExampleMetadataMultipleEEnum.Add64(int64(2), "two")
	MultipleEEnumThree = ExampleMetadataMultipleEEnum.Add64(int64(3), "three")

	DistinctEEnumOne   = ExampleMetadataDistinctEEnum.AddStringer(threeType(1))
	DistinctEEnumTwo   = ExampleMetadataDistinctEEnum.AddStringer(threeType(2))
	DistinctEEnumThree = ExampleMetadataDistinctEEnum.AddStringer(threeType(3))
)

var ExampleMetadataSingleXEnum = xopat.Make{Key: "s-xenum", Namespace: "test"}.EnumAttribute(xopconst.SpanKindServer)
var ExampleMetadataLockedXEnum = xopat.Make{Key: "l-xenum", Locked: true, Namespace: "test"}.EnumAttribute(xopconst.SpanKindServer)
var ExampleMetadataMultipleXEnum = xopat.Make{Key: "m-xenum", Multiple: true, Namespace: "test"}.EnumAttribute(xopconst.SpanKindServer)
var ExampleMetadataDistinctXEnum = xopat.Make{Key: "d-xenum", Multiple: true, Distinct: true, Namespace: "test"}.EnumAttribute(xopconst.SpanKindServer)

// TODO: why the skips?
// MACRO ZZZAttribute SKIP:Any,Enum
var ExampleMetadataSingleZZZ = xopat.Make{Key: "s-zzz", Namespace: "test"}.ZZZAttribute()
var ExampleMetadataLockedZZZ = xopat.Make{Key: "l-zzz", Locked: true, Namespace: "test"}.ZZZAttribute()
var ExampleMetadataMultipleZZZ = xopat.Make{Key: "m-zzz", Multiple: true, Namespace: "test"}.ZZZAttribute()
var ExampleMetadataDistinctZZZ = xopat.Make{Key: "d-zzz", Multiple: true, Distinct: true, Namespace: "test"}.ZZZAttribute()
